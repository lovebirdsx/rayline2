local function set_gameover_visible(self, bool)
    gui.set_enabled(gui.get_node('gameover'), bool)
end

function init(self)
    self.score = 0
    self.target_score = 0
    set_gameover_visible(self, false)
end

function final(self)
end

function update(self, dt)
    if self.score < self.target_score then
        self.score = self.score + self.score_add_speed * dt
        gui.set_text(gui.get_node('score'), math.floor(self.score))
        if self.score >= self.target_score then
            self.score = self.target_score
        end
    end
end

local function on_score_ani_down(self, node)
    gui.delete_node(node)
end

local function on_add_score_ani(self, message)
    local score, pos = message.score, message.pos
    local node = gui.new_text_node(pos, score)

    -- score up ani
    gui.set_font(node, 'score_pop')
    gui.set_color(node, vmath.vector3(0.5))
    gui.animate(node, 'position.y', pos.y + 150, gui.EASING_LINEAR, 0.5, 0.6, on_score_ani_down, gui.PLAYBACK_ONCE_FORWARD)
    gui.animate(node, 'scale', 1.2, gui.EASING_LINEAR, 0.2, 0, nil, gui.PLAYBACK_ONCE_PINGPONG)
    gui.animate(node, 'color', vmath.vector3(1), gui.EASING_LINEAR, 0.2, 0)
    gui.animate(node, 'color.w', 0, gui.EASING_LINEAR, 1, 0.6)

    -- score add ani
    local s_node = gui.get_node('score')
    local add_time = 0.6
    gui.set_text(s_node, message.to)
    gui.cancel_animation(s_node, 'scale')
    gui.animate(s_node, 'scale', 1.6, gui.EASING_LINEAR, add_time, 0, nil, gui.PLAYBACK_ONCE_PINGPONG)
    local from, to = self.score, message.to
    self.score_add_speed = (to - from) / add_time
    self.target_score = to
end

local function on_update_score(self, message)
    local score = message.score
    gui.set_text(gui.get_node('score'), score)
    self.score = score
    self.target_score = score
end

local function on_update_best_score(self, message)
    gui.set_text(gui.get_node('best_score'), 'Best: ' .. message.best_score)
end

local function on_show_gameover(self)
    set_gameover_visible(self, true)
end

local function on_input(self, action_id, action)
    if action_id == hash('touch') and action.pressed then
        local gameover = gui.get_node('gameover')
        if gui.is_enabled(gameover) and gui.pick_node(gameover, action.x, action.y) then
            set_gameover_visible(false)
            msg.post('manager', 'restart')
        elseif gui.pick_node(gui.get_node('return'), action.x, action.y) then
            msg.post('manager', 'return')
        end
    end
end

function on_message(self, message_id, message, sender)
    if message_id == hash('update_score') then
        on_update_score(self, message)
    elseif message_id == hash('add_score_ani') then
        on_add_score_ani(self, message)
    elseif message_id == hash('update_best_score') then
        on_update_best_score(self, message)
    elseif message_id == hash('show_gameover') then
        on_show_gameover(self)
    elseif message_id == hash('input') then
        on_input(self, message.action_id, message.action)
    end
end
