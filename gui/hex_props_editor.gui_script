local dirtylarry = require 'dirtylarry.dirtylarry'
local Helper = require 'lib.common.helper'
local Props = require 'lib.play.hex.props'
local Config = require 'lib.config.base'

function init_colorids(self)
    for i, color in ipairs(Config.HexColors) do
        local node_name = ('color_ids/color_id%d/color'):format(i)
        gui.set_color(gui.get_node(node_name), color)
    end
end

function bind(self)
    if self.props:test('tied_up') then
        gui.set_enabled(gui.get_node('n_tied_up'), true)
        self.checkbox_tied_up_value = self.props:get('tied_up')
    else
        gui.set_enabled(gui.get_node('n_tied_up'), false)
    end

    if self.props:test('color_id') then
        gui.set_enabled(gui.get_node('n_color_ids'), true)
        self.radio_color_id = self.props:get('color_id')
    else
        gui.set_enabled(gui.get_node('n_color_ids'), false)
    end

    if self.props:test('k') then
        gui.set_enabled(gui.get_node('n_arrow_k'), true)
        self.radio_k = self.props:get('k')
    else
        gui.set_enabled(gui.get_node('n_arrow_k'), false)
    end

    if self.props:test('lock_count') then
        gui.set_enabled(gui.get_node('n_diamonds'), true)
        self.radio_lock_count = self.props:get('lock_count')
    else
        gui.set_enabled(gui.get_node('n_diamonds'), false)
    end
end

function update_data(self)
    if self.props:test('tied_up') then
        self.props:set('tied_up', self.checkbox_tied_up_value)
    end

    if self.props:test('color_id') then
        self.props:set('color_id', self.radio_color_id)
    end

    if self.props:test('k') then
        self.props:set('k', self.radio_k)
    end

    if self.props:test('lock_count') then
        self.props:set('lock_count', self.radio_lock_count)
    end
end

function init(self)
    init_colorids(self)

    self.props = Props()
    bind(self)
end

function final(self)
end

local function on_bind(self, message, sender)
    self.props = Helper.pop_table(message.id)
    self.binder = sender
    bind(self)
end

function on_message(self, message_id, message, sender)
    if message_id == hash('bind') then
        on_bind(self, message, sender)
    end
end

local function exit(self)
    if self.binder then
        update_data(self)
        msg.post(self.binder, 'finish_edit_hex_prop')
    end
end

function on_input(self, action_id, action)
    dirtylarry:button('button_ok', action_id, action, exit, self)

    for cid = 1, #Config.HexColors do
        local name = ('color_ids/color_id%d/radio'):format(cid)
        self.radio_color_id = dirtylarry:radio(name, action_id, action, cid, self.radio_color_id)
    end

    for i, k in ipairs({0, 2, -2}) do
        local name = ('arrow_ks/k%d/radio'):format(i)
        self.radio_k = dirtylarry:radio(name, action_id, action, k, self.radio_k)
    end

    for i = 0, 3 do
        local name = ('diamonds/diamond%d/radio'):format(i)
        self.radio_lock_count = dirtylarry:radio(name, action_id, action, i, self.radio_lock_count)
    end

    self.checkbox_tied_up_value = dirtylarry:checkbox('checkbox_tied_up', action_id, action, self.checkbox_tied_up_value)
end
